name: CI

on: [ push ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        unity-version: [2020.3.25f1, 2019.4.34f1, 2018.4.36f1] # TODO 2017.4.40f1, license no worky
        arch: [x64, x32]
        scripting-backend: [Mono2x, IL2CPP]
        exclude:
          - os: ubuntu-latest
            arch: x32
        include:
          - os: ubuntu-latest
            unity-version: 2018.4.36f1 # TODO 2017.4.40f1
            scripting-backend: Mono2x
            arch: x32
          - os: ubuntu-latest
            unity-version: 2018.4.36f1 # TODO 2017.4.40f1
            scripting-backend: IL2CPP
            arch: x32

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - id: setup-unity
        uses: kuler90/setup-unity@v1
        with:
          unity-version: ${{ matrix.unity-version }}

      - name: Activate Unity
        uses: js6pak/activate-unity@master
        with:
          unity-username: ${{ secrets.UNITY_USERNAME }}
          unity-password: ${{ secrets.UNITY_PASSWORD }}
          unity-authenticator-key: ${{ secrets.UNITY_AUTHENTICATOR_KEY }}

      - id: set-platform
        shell: bash
        run: |
          echo "::set-output name=platform::$([ "${{ matrix.os }}" == "ubuntu-latest" ] && echo "Linux" || echo "Windows")$([ "${{ matrix.arch }}" == "x64" ] && echo "64" || echo "")"
          echo "::set-output name=scripting-backend::$([ "${{ matrix.scripting-backend }}" == "Mono2x" ] && echo "Mono" || echo "IL2CPP")"

      - name: Build Unity
        uses: js6pak/build-unity@master
        with:
          build-target: Standalone${{ steps.set-platform.outputs.platform }}
          build-scripting-backend: ${{ matrix.scripting-backend }}
          build-path: ./out/TestGame.exe
    
      - uses: actions/upload-artifact@v2
        with:
          name: TestGame ${{ steps.set-platform.outputs.scripting-backend }} ${{ steps.set-platform.outputs.platform }} ${{ matrix.unity-version }}
          path: out
